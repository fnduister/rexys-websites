upstream seereye {
    server seereye:3000;
}

upstream rexys {
    server rexys:3001;
}

upstream flutter {
    server flutter:80;
}

# http requests
server {
    listen 80;
    listen [::]:80;

    root /var/www;
    server_name _;
    
    # To acquire and update letsEncrypt certificates we need to serve this route
    location /.well-known/acme-challenge/ { 
        root /var/www/certbot;
    }
    
    location / {
        return 301 https://$host$request_uri/;
    } 
    
}

# https requests
server {
    listen 443;
    server_name seereye.ca;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

   
    root /var/www/seereye;

    #this where socket io will be handling the request
    location / {
        #return 301 https://co-dot.rexys.space/co-Dot;
        proxy_set_header Host $host:$server_port;   
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        server_name_in_redirect off;
        proxy_redirect     off;
        proxy_pass "https://seereye/";
    }
}

# https requests
server {
    listen 443;
    server_name rexys.io;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
   
    root /var/www/rexys;

    #this where socket io will be handling the request
    location / {
        #return 301 https://co-dot.rexys.space/co-Dot;
        proxy_set_header Host $host:$server_port;   
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        server_name_in_redirect off;
        proxy_redirect     off;
        proxy_pass "https://rexys/";
    }
}

# https requests
server {
    listen 443;
    server_name app.seereye.ca;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
   
    root /var/www/seereye-app;

    #this where socket io will be handling the request
    location / {
        #return 301 https://co-dot.rexys.space/co-Dot;
        proxy_set_header Host $host:$server_port;   
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        server_name_in_redirect off;
        proxy_redirect     off;
        proxy_pass "https://flutter/";
    }
}

